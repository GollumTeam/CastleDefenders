package net.minecraft.client.renderer;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.nio.IntBuffer;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import javax.imageio.ImageIO;
import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.texture.TextureMap;
import net.minecraft.client.settings.GameSettings;
import net.minecraft.client.texturepacks.ITexturePack;
import net.minecraft.client.texturepacks.TexturePackList;
import net.minecraft.util.Icon;
import net.minecraft.util.IntHashMap;
import org.lwjgl.opengl.GL11;
import org.lwjgl.opengl.GL12;

@SideOnly(Side.CLIENT)
public class RenderEngine
{
    private HashMap field_78362_c = new HashMap();
    private HashMap field_78359_d = new HashMap();
    private IntHashMap field_78360_e = new IntHashMap();
    private IntBuffer field_78358_g = GLAllocation.func_74527_f(4194304);
    private Map field_78368_i = new HashMap();
    private GameSettings field_78365_j;
    public TexturePackList field_78366_k;
    private BufferedImage field_78364_l = new BufferedImage(64, 64, 2);
    public final TextureMap field_94154_l;
    public final TextureMap field_94155_m;
    private int field_94153_n;

    public RenderEngine(TexturePackList p_i3192_1_, GameSettings p_i3192_2_)
    {
        this.field_78366_k = p_i3192_1_;
        this.field_78365_j = p_i3192_2_;
        Graphics graphics = this.field_78364_l.getGraphics();
        graphics.setColor(Color.WHITE);
        graphics.fillRect(0, 0, 64, 64);
        graphics.setColor(Color.BLACK);
        int i = 10;
        int j = 0;

        while (i < 64)
        {
            String s = j++ % 2 == 0 ? "missing" : "texture";
            graphics.drawString(s, 1, i);
            i += graphics.getFont().getSize();

            if (j % 2 == 0)
            {
                i += 5;
            }
        }

        graphics.dispose();
        this.field_94154_l = new TextureMap(0, "terrain", "textures/blocks/", this.field_78364_l);
        this.field_94155_m = new TextureMap(1, "items", "textures/items/", this.field_78364_l);
    }

    public int[] func_78346_a(String p_78346_1_)
    {
        ITexturePack itexturepack = this.field_78366_k.func_77292_e();
        int[] aint = (int[])this.field_78359_d.get(p_78346_1_);

        if (aint != null)
        {
            return aint;
        }
        else
        {
            try
            {
                InputStream inputstream = itexturepack.func_77532_a(p_78346_1_);
                int[] aint1;

                if (inputstream == null)
                {
                    aint1 = this.func_78348_b(this.field_78364_l);
                }
                else
                {
                    aint1 = this.func_78348_b(this.func_78345_a(inputstream));
                }

                this.field_78359_d.put(p_78346_1_, aint1);
                return aint1;
            }
            catch (IOException ioexception)
            {
                ioexception.printStackTrace();
                int[] aint2 = this.func_78348_b(this.field_78364_l);
                this.field_78359_d.put(p_78346_1_, aint2);
                return aint2;
            }
        }
    }

    private int[] func_78348_b(BufferedImage p_78348_1_)
    {
        return this.func_78340_a(p_78348_1_, new int[p_78348_1_.getWidth() * p_78348_1_.getHeight()]);
    }

    private int[] func_78340_a(BufferedImage p_78340_1_, int[] p_78340_2_)
    {
        int i = p_78340_1_.getWidth();
        int j = p_78340_1_.getHeight();
        p_78340_1_.getRGB(0, 0, i, j, p_78340_2_, 0, i);
        return p_78340_2_;
    }

    public void func_98187_b(String p_98187_1_)
    {
        this.func_78342_b(this.func_78341_b(p_98187_1_));
    }

    private void func_78342_b(int p_78342_1_)
    {
        if (p_78342_1_ != this.field_94153_n)
        {
            GL11.glBindTexture(GL11.GL_TEXTURE_2D, p_78342_1_);
            this.field_94153_n = p_78342_1_;
        }
    }

    public void func_98185_a()
    {
        this.field_94153_n = -1;
    }

    public int func_78341_b(String p_78341_1_)
    {
        if (p_78341_1_.equals("/terrain.png"))
        {
            this.field_94154_l.func_94246_d().func_94277_a(0);
            return this.field_94154_l.func_94246_d().func_94282_c();
        }
        else if (p_78341_1_.equals("/gui/items.png"))
        {
            this.field_94155_m.func_94246_d().func_94277_a(0);
            return this.field_94155_m.func_94246_d().func_94282_c();
        }
        else
        {
            Integer integer = (Integer)this.field_78362_c.get(p_78341_1_);

            if (integer != null)
            {
                return integer.intValue();
            }
            else
            {
                String s1 = p_78341_1_;

                try
                {
                    int i = GLAllocation.func_74528_a();
                    boolean flag = p_78341_1_.startsWith("%blur%");

                    if (flag)
                    {
                        p_78341_1_ = p_78341_1_.substring(6);
                    }

                    boolean flag1 = p_78341_1_.startsWith("%clamp%");

                    if (flag1)
                    {
                        p_78341_1_ = p_78341_1_.substring(7);
                    }

                    InputStream inputstream = this.field_78366_k.func_77292_e().func_77532_a(p_78341_1_);

                    if (inputstream == null)
                    {
                        this.func_98184_a(this.field_78364_l, i, flag, flag1);
                    }
                    else
                    {
                        this.func_98184_a(this.func_78345_a(inputstream), i, flag, flag1);
                    }

                    this.field_78362_c.put(s1, Integer.valueOf(i));
                    return i;
                }
                catch (Exception exception)
                {
                    exception.printStackTrace();
                    int j = GLAllocation.func_74528_a();
                    this.func_78351_a(this.field_78364_l, j);
                    this.field_78362_c.put(p_78341_1_, Integer.valueOf(j));
                    return j;
                }
            }
        }
    }

    public int func_78353_a(BufferedImage p_78353_1_)
    {
        int i = GLAllocation.func_74528_a();
        this.func_78351_a(p_78353_1_, i);
        this.field_78360_e.func_76038_a(i, p_78353_1_);
        return i;
    }

    public void func_78351_a(BufferedImage p_78351_1_, int p_78351_2_)
    {
        this.func_98184_a(p_78351_1_, p_78351_2_, false, false);
    }

    public void func_98184_a(BufferedImage p_98184_1_, int p_98184_2_, boolean p_98184_3_, boolean p_98184_4_)
    {
        this.func_78342_b(p_98184_2_);
        GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MIN_FILTER, GL11.GL_NEAREST);
        GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MAG_FILTER, GL11.GL_NEAREST);

        if (p_98184_3_)
        {
            GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MIN_FILTER, GL11.GL_LINEAR);
            GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MAG_FILTER, GL11.GL_LINEAR);
        }

        if (p_98184_4_)
        {
            GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_S, GL11.GL_CLAMP);
            GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_T, GL11.GL_CLAMP);
        }
        else
        {
            GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_S, GL11.GL_REPEAT);
            GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_T, GL11.GL_REPEAT);
        }

        int j = p_98184_1_.getWidth();
        int k = p_98184_1_.getHeight();
        int[] aint = new int[j * k];
        p_98184_1_.getRGB(0, 0, j, k, aint, 0, j);

        if (this.field_78365_j != null && this.field_78365_j.field_74337_g)
        {
            aint = this.func_98186_a(aint);
        }

        this.field_78358_g.clear();
        this.field_78358_g.put(aint);
        this.field_78358_g.position(0).limit(aint.length);
        GL11.glTexImage2D(GL11.GL_TEXTURE_2D, 0, GL11.GL_RGBA, j, k, 0, GL12.GL_BGRA, GL12.GL_UNSIGNED_INT_8_8_8_8_REV, this.field_78358_g);
    }

    private int[] func_98186_a(int[] p_98186_1_)
    {
        int[] aint1 = new int[p_98186_1_.length];

        for (int i = 0; i < p_98186_1_.length; ++i)
        {
            int j = p_98186_1_[i] >> 24 & 255;
            int k = p_98186_1_[i] >> 16 & 255;
            int l = p_98186_1_[i] >> 8 & 255;
            int i1 = p_98186_1_[i] & 255;
            int j1 = (k * 30 + l * 59 + i1 * 11) / 100;
            int k1 = (k * 30 + l * 70) / 100;
            int l1 = (k * 30 + i1 * 70) / 100;
            aint1[i] = j << 24 | j1 << 16 | k1 << 8 | l1;
        }

        return aint1;
    }

    public void func_78349_a(int[] p_78349_1_, int p_78349_2_, int p_78349_3_, int p_78349_4_)
    {
        this.func_78342_b(p_78349_4_);
        GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MIN_FILTER, GL11.GL_NEAREST);
        GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_MAG_FILTER, GL11.GL_NEAREST);
        GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_S, GL11.GL_REPEAT);
        GL11.glTexParameteri(GL11.GL_TEXTURE_2D, GL11.GL_TEXTURE_WRAP_T, GL11.GL_REPEAT);

        if (this.field_78365_j != null && this.field_78365_j.field_74337_g)
        {
            p_78349_1_ = this.func_98186_a(p_78349_1_);
        }

        this.field_78358_g.clear();
        this.field_78358_g.put(p_78349_1_);
        this.field_78358_g.position(0).limit(p_78349_1_.length);
        GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, 0, 0, p_78349_2_, p_78349_3_, GL12.GL_BGRA, GL12.GL_UNSIGNED_INT_8_8_8_8_REV, this.field_78358_g);
    }

    public void func_78344_a(int p_78344_1_)
    {
        this.field_78360_e.func_76049_d(p_78344_1_);
        GL11.glDeleteTextures(p_78344_1_);
    }

    public int func_78350_a(String p_78350_1_, String p_78350_2_)
    {
        ThreadDownloadImageData threaddownloadimagedata = (ThreadDownloadImageData)this.field_78368_i.get(p_78350_1_);

        if (threaddownloadimagedata != null && threaddownloadimagedata.field_78462_a != null && !threaddownloadimagedata.field_78459_d)
        {
            if (threaddownloadimagedata.field_78461_c < 0)
            {
                threaddownloadimagedata.field_78461_c = this.func_78353_a(threaddownloadimagedata.field_78462_a);
            }
            else
            {
                this.func_78351_a(threaddownloadimagedata.field_78462_a, threaddownloadimagedata.field_78461_c);
            }

            threaddownloadimagedata.field_78459_d = true;
        }

        return threaddownloadimagedata != null && threaddownloadimagedata.field_78461_c >= 0 ? threaddownloadimagedata.field_78461_c : (p_78350_2_ == null ? -1 : this.func_78341_b(p_78350_2_));
    }

    public boolean func_82773_c(String p_82773_1_)
    {
        return this.field_78368_i.containsKey(p_82773_1_);
    }

    public ThreadDownloadImageData func_78356_a(String p_78356_1_, IImageBuffer p_78356_2_)
    {
        ThreadDownloadImageData threaddownloadimagedata = (ThreadDownloadImageData)this.field_78368_i.get(p_78356_1_);

        if (threaddownloadimagedata == null)
        {
            this.field_78368_i.put(p_78356_1_, new ThreadDownloadImageData(p_78356_1_, p_78356_2_));
        }
        else
        {
            ++threaddownloadimagedata.field_78460_b;
        }

        return threaddownloadimagedata;
    }

    public void func_78347_c(String p_78347_1_)
    {
        ThreadDownloadImageData threaddownloadimagedata = (ThreadDownloadImageData)this.field_78368_i.get(p_78347_1_);

        if (threaddownloadimagedata != null)
        {
            --threaddownloadimagedata.field_78460_b;

            if (threaddownloadimagedata.field_78460_b == 0)
            {
                if (threaddownloadimagedata.field_78461_c >= 0)
                {
                    this.func_78344_a(threaddownloadimagedata.field_78461_c);
                }

                this.field_78368_i.remove(p_78347_1_);
            }
        }
    }

    public void func_78343_a()
    {
        this.field_94154_l.func_94248_c();
        this.field_94155_m.func_94248_c();
    }

    public void func_78352_b()
    {
        ITexturePack itexturepack = this.field_78366_k.func_77292_e();
        this.func_94152_c();
        Iterator iterator = this.field_78360_e.func_76039_d().iterator();
        BufferedImage bufferedimage;

        while (iterator.hasNext())
        {
            int i = ((Integer)iterator.next()).intValue();
            bufferedimage = (BufferedImage)this.field_78360_e.func_76041_a(i);
            this.func_78351_a(bufferedimage, i);
        }

        ThreadDownloadImageData threaddownloadimagedata;

        for (iterator = this.field_78368_i.values().iterator(); iterator.hasNext(); threaddownloadimagedata.field_78459_d = false)
        {
            threaddownloadimagedata = (ThreadDownloadImageData)iterator.next();
        }

        iterator = this.field_78362_c.keySet().iterator();
        String s;

        while (iterator.hasNext())
        {
            s = (String)iterator.next();

            try
            {
                int j = ((Integer)this.field_78362_c.get(s)).intValue();
                boolean flag = s.startsWith("%blur%");

                if (flag)
                {
                    s = s.substring(6);
                }

                boolean flag1 = s.startsWith("%clamp%");

                if (flag1)
                {
                    s = s.substring(7);
                }

                BufferedImage bufferedimage1 = this.func_78345_a(itexturepack.func_77532_a(s));
                this.func_98184_a(bufferedimage1, j, flag, flag1);
            }
            catch (IOException ioexception)
            {
                ioexception.printStackTrace();
            }
        }

        iterator = this.field_78359_d.keySet().iterator();

        while (iterator.hasNext())
        {
            s = (String)iterator.next();

            try
            {
                bufferedimage = this.func_78345_a(itexturepack.func_77532_a(s));
                this.func_78340_a(bufferedimage, (int[])this.field_78359_d.get(s));
            }
            catch (IOException ioexception1)
            {
                ioexception1.printStackTrace();
            }
        }

        Minecraft.func_71410_x().field_71466_p.func_98304_a();
        Minecraft.func_71410_x().field_71464_q.func_98304_a();
    }

    private BufferedImage func_78345_a(InputStream p_78345_1_) throws IOException
    {
        BufferedImage bufferedimage = ImageIO.read(p_78345_1_);
        p_78345_1_.close();
        return bufferedimage;
    }

    public void func_94152_c()
    {
        this.field_94154_l.func_94247_b();
        this.field_94155_m.func_94247_b();
    }

    public Icon func_96448_c(int p_96448_1_)
    {
        switch (p_96448_1_)
        {
            case 0:
                return this.field_94154_l.func_96455_e();
            case 1:
            default:
                return this.field_94155_m.func_96455_e();
        }
    }
}
